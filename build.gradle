plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'com.bmuschko.docker-spring-boot-application' version '4.6.2'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.bmuschko.docker-spring-boot-application'

    ext {
        toolsCommon = "tools-common"
        toolsCommonJpa = "tools-common-jpa"
        toolsCommonBase = "tools-common-base"
        hostMachineIp = "springcloud-tools"
        springBootVersion = "2.1.3.RELEASE"
        springCloudVersion = "Greenwich.RELEASE"
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    group = 'store.zabbix'
    version = 1.0
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
        //Gradle打包时使用lombok注解
        compileOnly 'org.projectlombok:lombok:1.18.6'
        annotationProcessor 'org.projectlombok:lombok:1.18.6'
        implementation 'com.google.code.gson:gson:2.8.5'
        implementation 'com.alibaba:fastjson:1.2.56'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    if (project.subprojects) {
        jar.enabled = false
        bootJar {
            enabled = false
        }
        dockerCreateDockerfile {
            enabled = false
        }
        dockerBuildImage {
            enabled = false
        }
    } else {
        dockerSyncBuildContext {
            doFirst {
                if (project.name == 'tools-crud-jpa') {
                    copy {
                        println('copy--------------------------common')
                        from('../tools-common/tools-common-jpa/build/classes/java/main/store/zabbix/common')
                        into('./build/classes/java/main/store/zabbix/common')
                    }
                }
            }
        }
    }
}