version: '3'

services:
  mysql5.7:
    image: mysql:5.7
    container_name: mysql57
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: nacos
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes: # 挂载持久化地址（个人理解）
      - ./docker/mysql/:/var/lib/mysql/
      - ./docker/conf/:/etc/mysql/
#  nacos:
#    image: nacos/nacos-server:latest
#    container_name: nacos-standalone
#    restart: unless-stopped
#    depends_on:
#      - mysql5.7
#    environment:
#      PREFER_HOST_MODE: hostname #如果支持主机名可以使用hostname,否则使用ip，默认也是ip
#      SPRING_DATASOURCE_PLATFORM: mysql #数据源平台 仅支持mysql或不保存empty
#      MODE: standalone
#      MYSQL_SERVICE_HOST: mysql5.7
#      MYSQL_SERVICE_DB_NAME: nacos
#      MYSQL_SERVICE_PORT: 3306
#      MYSQL_SERVICE_USER: root
#      MYSQL_SERVICE_PASSWORD: root
#      #JVM调优参数
#      JVM_XMS: 512m
#      JVM_XMX: 512m
#      JVM_XMN: 512m
#      JVM_MS: 128m
#      JVM_MMS: 320m
#    volumes:
#      - ./docker/nacos/standalone-logs/:/home/nacos/logs
#      - ./docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
#      - ./docker/nacos/plugins/:/home/nacos/plugins
#      - ./docker/nacos/conf/bootstrap.properties:/home/nacos/conf/bootstrap.properties
#    ports:
#      - "9999:8848"
#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:latest
#    volumes:
#      - ./docker/nacos/prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - nacos
#    restart: on-failure
#  grafana:
#    container_name: grafana
#    image: grafana/grafana:latest
#    ports:
#      - 3000:3000
#    restart: on-failure
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: "/"
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./docker/rabbit/conf/:/etc/rabbitmq/"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
  redis:
    image: redis:4.0.2
    container_name: redis
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/conf/:/usr/local/etc/redis/
    command: /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
    ports:
      - 8089:6379
  # consul:
  #   image: consul:1.7.3
  #   container_name: consul
  #   command: agent -server -bootstrap-expect=1 -data-dir /usr/local/consul -node=node1 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1 -ui
  #   volumes:
  #     - ./docker/consul:/usr/local/consul
  #   ports:
  #     - 8500:8500
  #     - 8600:8600/udp
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 500M
  # mongodb:
  #   image: mongo:4.2.6 # 镜像:版本
  #   container_name: mongo_db
  #   environment:
  #     - MONGO_INITDB_DATABASE=admin
  #     # 默认开启授权，并创建超管用户 mongo -u godis -p godis@admin --authenticationDatabase admin
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     # 超管密码，敏感数据也可以使用 `secrets`，不赘述。
  #     - MONGO_INITDB_ROOT_PASSWORD=root
  #     # .js 中默认的数据库
  #   volumes:
  #     - ./docker/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #     - ./docker/mongo/mongo-volume:/data/db
  #   ports:
  #     - "27017-27019:27017-27019"
  #   restart: always